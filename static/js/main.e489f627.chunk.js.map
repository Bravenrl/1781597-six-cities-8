{"version":3,"sources":["const.ts","types/action.ts","store/action.ts","store/root-reducer.ts","store/app-data/app-data.ts","store/app-process/app-process.ts","store/user-process/user-process.ts","store/app-process/selectors.ts","components/preloader/preloader.tsx","hocs/with-preloader/with-preloader.tsx","services/const.ts","store/user-process/selectors.ts","services/adapter.ts","services/toast.ts","services/token.ts","utils.ts","store/app-data/selectors.ts","components/favorites-empty-container/favorites-empty-container.tsx","class-const.ts","components/premium-mark/premium-mark.tsx","components/bookmark-button/bookmark-button.tsx","store/api-action.ts","components/offer-card/offer-card.tsx","components/offer-list/offer-list.tsx","components/favorites-items/favorites-items.tsx","components/favorites-list/favorites-list.tsx","components/header-logo/header-logo.tsx","components/header-nav/header-nav.tsx","components/favorites-page/favorites-page.tsx","components/login-page/login-page.tsx","components/city-list/city-list.tsx","components/places-option/places-options.tsx","components/cities-container/cities-container.tsx","components/cities-empty-container/cities-empty-container.tsx","hooks/use-map.ts","components/map/map.tsx","components/main-page/main-page.tsx","components/not-found-page/not-found-page.tsx","components/private-route-login/private-route-login.tsx","components/private-route/private-route.tsx","components/property-gallery/property-gallery.tsx","components/property-list/property-list.tsx","components/comment-star/comment-star.tsx","components/comment-form/comment-form.tsx","components/property-review/property-review.tsx","components/property-reviews-list/property-reviews-list.tsx","components/property-page/property-page.tsx","components/app/app.tsx","browser-history.ts","store/middlewares/redirect.ts","index.tsx","services/api.ts"],"names":["AppRoute","AuthorizationStatus","PageType","SortType","Status","Cities","Map","name","location","latitude","longitude","zoom","rePassword","reEmail","Star","EmptyComment","TestID","ActionType","TestReg","MainPage","RegExp","LoginEmail","LoginPassword","PropertyPage","FavoritePage","BackToRoot","NotFoundPage","LoginButton","Preloader","PlaceAltText","Root","FakeCity","NonExpectCity","LogoAltText","SignOut","SignIn","Favorite","Property","PremiumMark","Login","ImgAltText","AvatarAltText","RatingText","ReviewsText","ButtonIsFavorite","ButtonNonFavorite","FavoriteEmptyFirst","FavoriteEmptySecond","OptionText","Reducer","changeCity","createAction","ChangeCity","cityName","payload","loadOffers","LoadOffers","offers","changeSorting","ChangeSorting","option","toggleIsLoading","isLoading","requireAuthorization","RequireAuthorization","status","requireLogout","RequireLogout","NoAuth","addUserEmail","UserEmail","email","redirectToRoute","RedirectToRoute","url","loadCurrentOffer","LoadCurrentOffer","offer","loadNearbyOffers","LoadNearbyOffers","loadReviews","LoadReviews","reviews","historyBack","HistoryBack","toggleIsPosting","isPosting","addComment","AddComment","comment","addComentRating","AddCommentRating","rating","setCurrentId","SetCurrentId","id","loadFavoriteOffers","LoadFavoriteOffers","changeIsFavorite","ChangeIsFavorite","toggleIsFavorite","ToggleIsFavorite","isFavorite","removeCurrentOffer","RemoveCurrentOffer","removeFavoriteOffers","RemoveFavoriteOffers","initialState","userEmail","currentOffer","nearbyOffers","commentRating","favoriteOffers","currentIsFavorite","appData","createReducer","builder","addCase","state","action","actualOffer","length","filter","map","appProcess","city","sortType","Popular","authorizationStatus","Unknown","currentId","userProcess","rootReducer","combineReducers","app","data","user","getIsLoading","getIsPosting","useSelector","style","position","top","left","width","height","display","alignItems","justifyContent","src","alt","withPreloader","ApiRoute","HttpCode","ToastMessage","WpappedComponent","props","ReactDOM","createPortal","document","body","getCity","getSortType","getAuthorizationStatus","getCurrentId","adaptHostToClient","host","isPro","avatarUrl","restUser","adaptOfferToCient","isPremium","maxAdults","previewImage","rest","adaptReviewToCient","review","adaptAuthInfoToClient","authInfo","token","AUTN_TOKEN_NAME","createToast","undefined","toast","error","NetworkErr","Unauthorised","warning","BadRequest","ВadRequest","NotFound","setToken","localStorage","setItem","getWithCapitalLetter","word","toUpperCase","slice","getUserEmail","getCurrentOffer","getNearbyOffers","getComment","getCommentRating","getFavoriteOffers","getCurrentIsFavorite","getCurrentOffers","createSelector","getReviewsSortByDate","sort","objA","objB","Date","parse","date","getCurrentWithNearby","getSortedOffers","PriceToHight","price","PriceToLow","TopRated","FavoritesEmptyContainer","className","ButtonClass","button","icon","active","MapClass","OfferListClass","OfferCardClass","PremiumMarkClass","pageType","BookmarkButton","authStatus","dispatch","useDispatch","btnIsFavorite","useState","isDisabled","setIsDisabled","useEffect","type","disabled","onClick","evt","preventDefault","Auth","_getState","api","a","post","then","response","catch","err","postFavoriteAction","ButtonSvg","xlinkHref","getClassNameByType","Main","Favorites","OfferCard","title","ratingPercent","Math","round","linkPath","generatePath","RoomProprety","onMouseEnter","onMouseLeave","marginTop","to","memo","OfferList","OfferListDiv","FavoritesItems","filterOffersByCity","useMemo","href","FavoritesList","keys","item","HeaderLogo","HeaderNav","useLocation","delete","Logout","removeItem","pathname","FavoritesPage","isNotEmpty","get","LoadFiail","LoginPage","cities","floor","random","loginRef","useRef","passwordRef","method","onSubmit","current","test","value","password","author","loginAction","ref","placeholder","required","LoginLink","CityList","PlacesOption","sortTypes","Object","values","isOpened","setIsOpened","tabIndex","prevState","Option","CitiesContainer","sortedOffers","CitiesEmptyContainer","useMap","mapRef","setMap","instance","center","lat","lng","layer","TileLayer","attribution","addLayer","CustomIcon","defaultCustomIcon","Icon","iconUrl","iconSize","iconAnchor","currentCustomIcon","getStyleByPageName","margin","selectedId","currentPin","currentCity","history","useHistory","markersGroup","LayerGroup","forEach","marker","Marker","addEventListener","push","setIcon","addTo","remove","flyTo","MapSection","currentOffers","textAlign","fontSize","fontWeight","fontStyle","color","PrivateRouteLogin","PrivateRoute","exact","path","render","GalleryList","images","image","PropertyList","goods","CommentStar","element","discription","checked","onChange","target","htmlFor","CommentForm","isButonDisable","Reviews","comments","postCommentAction","toString","entries","PropertyReview","currentDate","dayjs","format","dateTime","he","encode","ReviewsList","sortedReviews","params","useParams","currWithNearOffers","window","scrollTo","axios","all","Offers","NearbyOffers","spread","nearby","loadPropertyOffersAction","bedrooms","description","WPFavoritesPage","WPLoginPage","WPMainPage","WPPropertyPage","App","browserHistory","createBrowserHistory","redirect","_store","next","goBack","onUnauthorised","create","baseURL","timeout","interceptors","request","use","config","getItem","getToken","headers","Promise","reject","createApi","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e489f627.chunk.js","sourcesContent":["import { CityType } from './types/offer';\n\nexport const COMMENT_MIN_VALUE = 50;\nexport const COMMENT_MAX_VALUE = 300;\nexport const RATING_MIN_VALUE = 0;\n\nexport const enum AppRoute {\n  Root = '/',\n  Login = '/login',\n  Favorites = '/favorites',\n  RoomProprety = '/offer/:id',\n  NotFound = '/notfound'\n}\n\nexport const enum AuthorizationStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\nexport const enum PageType {\n  Main = 'cities',\n  Favorites = 'favorites',\n  Property = 'near-places',\n}\n\nexport const CustomIcon = {\n  DEFAULT: 'img/pin.svg',\n  CURRENT: 'img/pin-active.svg',\n};\n\nexport enum SortType {\n  Popular = 'Popular',\n  PriceToHight = 'Price: low to high',\n  PriceToLow = 'Price: high to low',\n  TopRated = 'Top rated first'\n}\n\nexport const INITIAL_CITY = 'Paris';\n\nexport const Cities = new Map<string, CityType>([\n  ['Paris', {\n    name: 'Paris',\n    location: {\n      latitude: 48.85661,\n      longitude: 2.351499,\n      zoom: 13,\n    },\n  }],\n  ['Cologne', {\n    name: 'Cologne',\n    location: {\n      latitude: 50.938361,\n      longitude: 6.959974,\n      zoom: 13,\n    },\n  }],\n  ['Brussels', {\n    name: 'Brussels',\n    location: {\n      latitude: 50.846557,\n      longitude: 4.351697,\n      zoom: 13,\n    },\n  }],\n  ['Amsterdam', {\n    name: 'Amsterdam',\n    location: {\n      latitude: 52.37454,\n      longitude: 4.897976,\n      zoom: 13,\n    },\n  }],\n  ['Hamburg', {\n    name: 'Hamburg',\n    location: {\n      latitude: 53.550341,\n      longitude: 10.000654,\n      zoom: 13,\n    },\n  }],\n  ['Dusseldorf', {\n    name: 'Dusseldorf',\n    location: {\n      latitude: 51.225402,\n      longitude: 6.776314,\n      zoom: 13,\n    },\n  }],\n]);\n\nexport const rePassword = /(?=.*[0-9])(?=.*[a-z])[0-9a-z]{2,}/;\nexport const reEmail = /.+@.+\\..+/i;\nexport const invalidPassword = 'Invalid password';\nexport const invalidEmail = 'Invalid email';\n\n\nexport const Star = new Map<number, string>([\n  [5, 'perfect'], [4, 'good'], [3, 'not bad'], [2, 'badly'], [1, 'terribly'],\n]);\n\nexport const EmptyComment = {\n  comment: '',\n  rating: 0,\n};\n\nexport const enum Status {\n  add = 1,\n  delete = 0,\n}\n\nexport const MAX_COMENT_VAL = 10;\n\n\nexport const enum TestID {\n  LoginEmail = 'email',\n  LoginPassword = 'password',\n  LoginButton = 'button',\n  LoginLink = 'link',\n  MapSection = 'map',\n  OfferListDiv = 'offer',\n  ButtonSvg = 'svg',\n  Option = 'span',\n}\n\nexport const TestReg = {\n  MainPage: new RegExp('Cities', 'i'),\n  LoginEmail: new RegExp('E-mail', 'i'),\n  LoginPassword: new RegExp('Password', 'i'),\n  PropertyPage: new RegExp('Meet the host', 'i'),\n  FavoritePage: new RegExp('Saved listing', 'i'),\n  BackToRoot: new RegExp('Вернуться на главную', 'i'),\n  NotFoundPage: new RegExp('404. Page not found', 'i'),\n  LoginButton: new RegExp('Sign in', 'i'),\n  Preloader: new RegExp('Loading', 'i'),\n  PlaceAltText: new RegExp('Place', 'i'),\n  Root: new RegExp('root', 'i'),\n  FakeCity: new RegExp('Paris', 'i'),\n  NonExpectCity: new RegExp('Cologne', 'i'),\n  LogoAltText: new RegExp('6 cities logo', 'i'),\n  SignOut: new RegExp('Sign out', 'i'),\n  SignIn: new RegExp('Sign in', 'i'),\n  Favorite: new RegExp('favorite', 'i'),\n  Property: new RegExp('property', 'i'),\n  PremiumMark: new RegExp('Premium', 'i'),\n  Login: new RegExp('login', 'i'),\n  ImgAltText: new RegExp('Studio', 'i'),\n  AvatarAltText: new RegExp('Reviews avatar', 'i'),\n  RatingText: new RegExp('Rating', 'i'),\n  ReviewsText: new RegExp('Reviews', 'i'),\n  ButtonIsFavorite: new RegExp('In bookmarks', 'i'),\n  ButtonNonFavorite: new RegExp('To bookmarks', 'i'),\n  FavoriteEmptyFirst: new RegExp('Nothing yet saved', 'i'),\n  FavoriteEmptySecond: new RegExp('Save properties to narrow down', 'i'),\n  OptionText: new RegExp('Sort by', 'i'),\n};\n\nexport const ROOT = `${TestReg.Root}`;\n\nexport const FAVORITE = `${TestReg.Favorite}`;\n\nexport const PROPERTY = `${TestReg.Property}`;\n\nexport const LOGIN = `${TestReg.Login}`;\n","import { Action, ThunkAction } from '@reduxjs/toolkit';\nimport { AxiosInstance } from 'axios';\nimport { State } from './state';\n\n\nexport enum ActionType {\n  isLoading = 'app/isLoading',\n  isPosting = 'app/isPosting',\n  RedirectToRoute = 'app/redirectToRoute',\n  HistoryBack = 'app/historyBack',\n  AddComment = 'data/addComment',\n  AddCommentRating = 'data/addCommentRating',\n  LoadOffers = 'data/loadOffers',\n  LoadFavoriteOffers = 'data/loadFavoriteOffers',\n  LoadReviews = 'data/loadReviews',\n  LoadCurrentOffer = 'data/loadCurrentOffer',\n  LoadNearbyOffers = 'data/loadNearbyOffers',\n  UserEmail = 'data/setUserEmail',\n  ChangeIsFavorite = 'data/changeIsFavorite',\n  RemoveFavoriteOffers = 'data/removeIsFavorite',\n  RemoveCurrentOffer = 'dara/removeCurrentOffer',\n  RequireAuthorization = 'user/requireAuthorization',\n  ChangeCity = 'user/changeCity',\n  RequireLogout = 'user/requireLogout',\n  ChangeSorting = 'user/changeSorting',\n  SetCurrentId = 'user/setCurrentId',\n  ToggleIsFavorite = 'user/toggleIsFavorite',\n}\n\nexport type ThunkActionResult<R = Promise<void>> = ThunkAction<R, State, AxiosInstance, Action>;\n\n","import { createAction } from '@reduxjs/toolkit';\nimport { AppRoute, AuthorizationStatus, SortType } from '../const';\nimport { ActionType } from '../types/action';\nimport { OfferType } from '../types/offer';\nimport { ReviewType } from '../types/review';\n\nexport const changeCity = createAction(\n  ActionType.ChangeCity,\n  (cityName: string) => ({ payload: cityName }));\n\nexport const loadOffers = createAction(\n  ActionType.LoadOffers,\n  (offers: OfferType[]) => ({ payload: offers }));\n\nexport const changeSorting = createAction(\n  ActionType.ChangeSorting,\n  (option: SortType) => ({ payload: option }));\n\nexport const toggleIsLoading = createAction(\n  ActionType.isLoading,\n  (isLoading: boolean) => ({ payload: isLoading }));\n\nexport const requireAuthorization = createAction(\n  ActionType.RequireAuthorization,\n  (status: AuthorizationStatus) => ({ payload: status }));\n\nexport const requireLogout = createAction(\n  ActionType.RequireLogout,\n  () => ({ payload: AuthorizationStatus.NoAuth }));\n\nexport const addUserEmail = createAction(\n  ActionType.UserEmail,\n  (email: string) => ({ payload: email }));\n\nexport const redirectToRoute = createAction(\n  ActionType.RedirectToRoute,\n  (url: AppRoute) => ({ payload: url }));\n\nexport const loadCurrentOffer = createAction(\n  ActionType.LoadCurrentOffer,\n  (offer: OfferType) => ({ payload: offer }));\n\nexport const loadNearbyOffers = createAction(\n  ActionType.LoadNearbyOffers,\n  (offers: OfferType[]) => ({ payload: offers }));\n\nexport const loadReviews = createAction(\n  ActionType.LoadReviews,\n  (reviews: ReviewType[]) => ({ payload: reviews }));\n\nexport const historyBack = createAction(ActionType.HistoryBack);\n\nexport const toggleIsPosting = createAction(\n  ActionType.isPosting,\n  (isPosting: boolean) => ({ payload: isPosting }));\n\nexport const addComment = createAction(\n  ActionType.AddComment,\n  (comment: string) => ({ payload: comment }));\n\nexport const addComentRating = createAction(\n  ActionType.AddCommentRating,\n  (rating: number) => ({ payload: rating }));\n\nexport const setCurrentId = createAction(\n  ActionType.SetCurrentId,\n  (id: number | null) => ({ payload: id }));\n\nexport const loadFavoriteOffers = createAction(\n  ActionType.LoadFavoriteOffers,\n  (offers: OfferType[]) => ({ payload: offers }));\n\nexport const changeIsFavorite = createAction(\n  ActionType.ChangeIsFavorite,\n  (offer: OfferType) => ({ payload: offer }));\n\nexport const toggleIsFavorite = createAction(\n  ActionType.ToggleIsFavorite,\n  (isFavorite: boolean | null, id: number) => ({ payload: { isFavorite, id } }));\n\nexport const removeCurrentOffer = createAction(ActionType.RemoveCurrentOffer);\n\nexport const removeFavoriteOffers = createAction(ActionType.RemoveFavoriteOffers);\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { appData } from './app-data/app-data';\nimport { appProcess } from './app-process/app-process';\nimport { userProcess } from './user-process/user-process';\n\nexport enum Reducer {\n  app = 'APP',\n  data = 'DATA',\n  user = 'USER',\n}\n\nexport const rootReducer = combineReducers({\n  [Reducer.app]: appProcess,\n  [Reducer.data]: appData,\n  [Reducer.user]: userProcess,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { EmptyComment } from '../../const';\nimport { OfferType } from '../../types/offer';\nimport { AppData } from '../../types/state';\nimport { addComment, addComentRating, addUserEmail, loadCurrentOffer, loadFavoriteOffers, loadNearbyOffers, loadOffers, loadReviews, changeIsFavorite, toggleIsFavorite, removeFavoriteOffers, removeCurrentOffer } from '../action';\n\nconst initialState: AppData = {\n  offers: [],\n  userEmail: '',\n  currentOffer: {} as OfferType,\n  nearbyOffers: [],\n  reviews: [],\n  comment: EmptyComment.comment,\n  commentRating: EmptyComment.rating,\n  favoriteOffers: [],\n  currentIsFavorite: null,\n};\n\nconst appData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadOffers, (state, action) => {\n      state.offers = action.payload;\n    })\n    .addCase(addUserEmail, (state, action) => {\n      state.userEmail = action.payload;\n    })\n    .addCase(loadCurrentOffer, (state, action) => {\n      state.currentOffer = action.payload;\n    })\n    .addCase(loadNearbyOffers, (state, action) => {\n      state.nearbyOffers = action.payload;\n    })\n    .addCase(loadReviews, (state, action) => {\n      state.reviews = action.payload;\n    })\n    .addCase(addComment, (state, action) => {\n      state.comment = action.payload;\n    })\n    .addCase(addComentRating, (state, action) => {\n      state.commentRating = action.payload;\n    })\n    .addCase(loadFavoriteOffers, (state, action) => {\n      state.favoriteOffers = action.payload;\n    })\n    .addCase(changeIsFavorite, (state, action) => {\n      const actualOffer = action.payload;\n      if (state.favoriteOffers.length > 0) {\n        state.favoriteOffers = state.favoriteOffers.filter((offer) => offer.id !== actualOffer.id);\n      }\n\n      state.offers = state.offers.map((offer) => {\n        if (offer.id === actualOffer.id) {\n          offer.isFavorite = actualOffer.isFavorite;\n        }\n        return offer;\n      });\n    })\n    .addCase(toggleIsFavorite, (state, action) => {\n      const { id, isFavorite } = action.payload;\n      state.currentIsFavorite = (state.currentOffer.id === id) ? isFavorite : null;\n    })\n    .addCase(removeFavoriteOffers, (state) => {\n      state.favoriteOffers = [];\n    })\n    .addCase(removeCurrentOffer, (state) => {\n      state.currentOffer = {} as OfferType;\n      state.nearbyOffers = [];\n      state.currentIsFavorite = null;\n      state.reviews = [];\n    });\n});\n\n\nexport { appData };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { AppProcess } from '../../types/state';\nimport { toggleIsLoading, toggleIsPosting } from '../action';\n\nconst initialState: AppProcess = {\n  isLoading: false,\n  isPosting: false,\n};\n\nconst appProcess = createReducer(initialState, (builder) => {\n  builder\n    .addCase(toggleIsLoading, (state, action) => {\n      state.isLoading = action.payload;\n    })\n    .addCase(toggleIsPosting, (state, action) => {\n      state.isPosting = action.payload;\n    });\n});\n\nexport { appProcess };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { AuthorizationStatus, INITIAL_CITY, SortType } from '../../const';\nimport { UserProcess } from '../../types/state';\nimport { changeCity, changeSorting, requireAuthorization, requireLogout, setCurrentId } from '../action';\n\nconst initialState: UserProcess = {\n  city: INITIAL_CITY,\n  sortType: SortType.Popular,\n  authorizationStatus: AuthorizationStatus.Unknown,\n  currentId: null,\n};\n\nconst userProcess = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeCity, (state, action) => {\n      state.city = action.payload;\n    })\n    .addCase(changeSorting, (state, action) => {\n      state.sortType = action.payload;\n    })\n    .addCase(requireAuthorization, (state, action) => {\n      state.authorizationStatus = action.payload;\n    })\n    .addCase(requireLogout, (state, action) => {\n      state.authorizationStatus = action.payload;\n    })\n    .addCase(setCurrentId, (state, action) => {\n      state.currentId = action.payload;\n    });\n});\n\n\nexport { userProcess };\n","import { State } from '../../types/state';\nimport { Reducer } from '../root-reducer';\n\nexport const getIsLoading = (state: State): boolean => state[Reducer.app].isLoading;\n\nexport const getIsPosting = (state: State): boolean => state[Reducer.app].isPosting;\n\n","import { useSelector } from 'react-redux';\nimport { getIsLoading, getIsPosting } from '../../store/app-process/selectors';\n\nfunction Preloader(): JSX.Element | null {\n  const isPosting = useSelector(getIsPosting);\n  const isLoading = useSelector(getIsLoading);\n  if (!isPosting&&!isLoading) {\n    return null;\n  }\n  return (\n    <div style={{\n      position: 'fixed', top: '200px', left: '35%',\n      width: '30%', height: '30%', display: 'flex',\n      alignItems: 'center', justifyContent: 'center',\n    }}\n    >\n      <img src=\"img/loading.svg\" alt=\"Loading\" />\n    </div>\n  );\n}\nexport default Preloader;\n","import { ComponentType } from 'react';\nimport ReactDOM from 'react-dom';\nimport Preloader from '../../components/preloader/preloader';\n\nfunction withPreloader<WCP>(WpappedComponent: ComponentType<WCP>): ComponentType<WCP> {\n\n  function WithPreloader(props: WCP): JSX.Element {\n    return (\n      <>\n        {ReactDOM.createPortal(<Preloader />, document.body)}\n        <WpappedComponent {...props} />\n      </>\n    );\n  }\n  return WithPreloader;\n}\n\nexport default withPreloader;\n","export const API_URL = 'https://8.react.pages.academy/six-cities';\nexport const REQEST_TIMEOUT = 5000;\nexport const AUTN_TOKEN_NAME = 'six-cities-token';\n\nexport enum ApiRoute {\n  Offers = '/hotels',\n  Login = '/login',\n  Logout = '/logout',\n  NearbyOffers = '/nearby',\n  Reviews = '/comments',\n  Favorite = '/favorite',\n}\n\nexport const enum HttpCode {\n  Unauthorised = 401,\n  NotFound = 404,\n  BadRequest = 400,\n  OK = 200,\n}\n\nexport const enum ToastMessage {\n  Unauthorised = 'log in, please',\n  ВadRequest = 'request error, check the entered data',\n  NotFound = 'data not available',\n  NetworkErr = 'network error',\n  LoadFiail = 'failed data loading'\n}\n","import { AuthorizationStatus, SortType } from '../../const';\nimport { State } from '../../types/state';\nimport { Reducer } from '../root-reducer';\n\nexport const getCity = (state: State): string => state[Reducer.user].city;\n\nexport const getSortType = (state: State): SortType => state[Reducer.user].sortType;\n\nexport const getAuthorizationStatus = (state: State): AuthorizationStatus => state[Reducer.user].authorizationStatus;\n\nexport const getCurrentId = (state: State): number|null => state[Reducer.user].currentId;\n","import { HostType, OfferType, ServerHostType, ServerOfferType } from '../types/offer';\nimport { AuthInfo, ReviewType, ServerAurhInfo, ServerReviewType } from '../types/review';\n\nconst adaptHostToClient = (host:ServerHostType): HostType => {\n  const {'is_pro': isPro, 'avatar_url': avatarUrl, ...restUser} = host;\n  return {\n    ...restUser,\n    isPro,\n    avatarUrl,\n  };\n};\n\nexport const adaptOfferToCient = (offer:ServerOfferType) : OfferType => {\n  const {'is_favorite': isFavorite, 'is_premium': isPremium, 'max_adults': maxAdults,\n    'preview_image': previewImage, host, ...rest}=offer;\n  return {\n    ...rest,\n    isFavorite,\n    isPremium,\n    maxAdults,\n    previewImage,\n    host: adaptHostToClient(host),\n  };\n};\n\nexport const adaptReviewToCient = (review:ServerReviewType) : ReviewType => {\n  const {user, ...rest}=review;\n  return {\n    ...rest,\n    user: adaptHostToClient(user),\n  };\n};\n\nexport const adaptAuthInfoToClient = (authInfo: ServerAurhInfo): AuthInfo => {\n  const {email, token, ...rest}=authInfo;\n  return {\n    ...adaptHostToClient(rest),\n    email,\n    token,\n  };\n};\n\nexport const adaptOfferToServer = (offer:OfferType) : ServerOfferType => {\n  const {isPro, avatarUrl, ...restHost} = offer.host;\n  const adaptedHost: ServerHostType = {\n    ...restHost,\n    'is_pro': isPro,\n    'avatar_url': avatarUrl,\n  };\n  const {isFavorite, isPremium, maxAdults,\n    previewImage, host, ...rest}=offer;\n  return {\n    ...rest,\n    'is_favorite': isFavorite,\n    'is_premium': isPremium,\n    'max_adults': maxAdults,\n    'preview_image': previewImage,\n    host: adaptedHost,\n  };\n};\n\n","import { toast } from 'react-toastify';\nimport { HttpCode, ToastMessage } from './const';\n\n\nexport const createToast = (status: number | undefined): void => {\n  if (status === undefined) {\n    toast.error(ToastMessage.NetworkErr);\n  }\n  if (status === HttpCode.Unauthorised) {\n    toast.warning(ToastMessage.Unauthorised);\n  }\n  if (status === HttpCode.BadRequest) {\n    toast.warning(ToastMessage.ВadRequest);\n  }\n  if (status === HttpCode.NotFound) {\n    toast.warning(ToastMessage.NotFound);\n  }\n};\n\n","import { AUTN_TOKEN_NAME } from './const';\n\n\nexport type Token = string;\n\nexport const getToken = (): Token => localStorage.getItem(AUTN_TOKEN_NAME) ?? '';\n\nexport const setToken = (token: Token): void => localStorage.setItem(AUTN_TOKEN_NAME, token);\n\nexport const removeToken = (): void => localStorage.removeItem(AUTN_TOKEN_NAME);\n","import { MAX_COMENT_VAL, SortType } from './const';\nimport { OfferType } from './types/offer';\nimport { ReviewType } from './types/review';\n\n\nexport const getSortByDate = (reviews: ReviewType[]): ReviewType[] =>\n  [...reviews].sort((objA, objB) => Date.parse(objB.date) - Date.parse(objA.date)).slice(0, MAX_COMENT_VAL);\n\nexport const getWithCapitalLetter = (word: string): string => word[0].toUpperCase() + word.slice(1);\n\nexport const getSortByType = (offers: OfferType[], sortType: string): OfferType[] => {\n  switch (sortType) {\n    case SortType.PriceToHight:\n      return [...offers].sort((objA, objB) => objA.price - objB.price);\n    case SortType.PriceToLow:\n      return [...offers].sort((objA, objB) => objB.price - objA.price);\n    case SortType.TopRated:\n      return [...offers].sort((objA, objB) => objB.rating - objA.rating);\n    default:\n      return offers;\n  }\n};\n\nexport const getFilterByCity = (offers: OfferType[], city:string): OfferType[] => offers.filter((offer) => offer.city.name === city);\n","import { createSelector } from 'reselect';\nimport { OfferType } from '../../types/offer';\nimport { ReviewType } from '../../types/review';\nimport { State } from '../../types/state';\nimport { getFilterByCity, getSortByDate, getSortByType } from '../../utils';\nimport { Reducer } from '../root-reducer';\nimport { getCity, getSortType } from '../user-process/selectors';\n\nexport const getOffers = (state: State): OfferType[] => state[Reducer.data].offers;\n\nexport const getUserEmail = (state: State): string => state[Reducer.data].userEmail;\n\nexport const getCurrentOffer = (state: State): OfferType => state[Reducer.data].currentOffer;\n\nexport const getNearbyOffers = (state: State): OfferType[] => state[Reducer.data].nearbyOffers;\n\nexport const getReviews = (state: State): ReviewType[] => state[Reducer.data].reviews;\n\nexport const getComment = (state: State): string => state[Reducer.data].comment;\n\nexport const getCommentRating = (state: State): number => state[Reducer.data].commentRating;\n\nexport const getFavoriteOffers = (state: State): OfferType[] => state[Reducer.data].favoriteOffers;\n\nexport const getCurrentIsFavorite = (state: State): boolean | null => state[Reducer.data].currentIsFavorite;\n\nexport const getCurrentOffers = createSelector(\n  [getOffers, getCity], getFilterByCity);\n\nexport const getReviewsSortByDate = createSelector(\n  [getReviews], getSortByDate);\n\nexport const getCurrentWithNearby = createSelector(\n  [getNearbyOffers, getCurrentOffer],\n  (nearbyOffers, currentOffer): OfferType[] => [...nearbyOffers, currentOffer]);\n\nexport const getSortedOffers = createSelector(\n  [getCurrentOffers, getSortType], getSortByType);\n\n\n","function FavoritesEmptyContainer(): JSX.Element {\n  return (\n    <section className=\"favorites favorites--empty\">\n      <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n      <div className=\"favorites__status-wrapper\">\n        <b className=\"favorites__status\">Nothing yet saved.</b>\n        <p className=\"favorites__status-description\">Save properties to narrow down search or plan your future trips.</p>\n      </div>\n    </section>\n  );\n}\n\nexport default FavoritesEmptyContainer;\n\n\n","export const ButtonClass = {\n  Property: {\n    button: 'property__bookmark-button',\n    icon: 'property__bookmark-icon',\n    active: 'property__bookmark-button--active',\n  },\n  Main: {\n    button: 'place-card__bookmark-button',\n    icon: 'place-card__bookmark-icon',\n    active: 'place-card__bookmark-button--active',\n  },\n};\n\nexport const MapClass = {\n  Main: 'cities__map',\n  Property: 'property__map',\n};\n\n\nexport const OfferListClass = {\n  Main: 'cities__places-list places__list tabs__content',\n  Favorites: 'favorites__places',\n  Property: 'near-places__list places__list',\n};\n\nexport const OfferCardClass = {\n  Main: 'cities__place-card place-card',\n  Favorites: 'favorites__card place-card',\n  Property: 'near-places__card place-card',\n};\n\nexport const PremiumMarkClass = {\n  Main: 'place-card__mark',\n  Property: 'property__mark',\n};\n","import { PremiumMarkClass } from '../../class-const';\nimport { PageType } from '../../const';\n\ntype PremiumMarkPropType = {\n  pageType: string;\n}\n\nfunction PremiumMark ({pageType} : PremiumMarkPropType) : JSX.Element | null {\n  return(\n    <div className={(pageType === PageType.Property) ? PremiumMarkClass.Property : PremiumMarkClass.Main}>\n      <span>Premium</span>\n    </div>\n  );\n}\n\nexport default PremiumMark;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ButtonClass } from '../../class-const';\nimport { AppRoute, AuthorizationStatus, PageType, TestID } from '../../const';\nimport { redirectToRoute } from '../../store/action';\nimport { postFavoriteAction } from '../../store/api-action';\nimport { getCurrentIsFavorite } from '../../store/app-data/selectors';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\n\ntype BookmarkButtonProps = {\n  isFavorite?: boolean;\n  pageType?: PageType;\n  id: number;\n}\n\nfunction BookmarkButton({ id, isFavorite, pageType }: BookmarkButtonProps): JSX.Element {\n  const currentIsFavorite = useSelector(getCurrentIsFavorite);\n  const authStatus = useSelector(getAuthorizationStatus);\n  const dispatch = useDispatch();\n  const btnIsFavorite = (pageType === PageType.Property) ? currentIsFavorite : isFavorite;\n  const [isDisabled, setIsDisabled] = useState(false);\n\n\n  useEffect(() => {\n    setIsDisabled(false);\n  }, [btnIsFavorite]);\n\n  return (\n    <button className={`${(pageType === PageType.Property) ? ButtonClass.Property.button : ButtonClass.Main.button}\n    ${btnIsFavorite && `${(pageType === PageType.Property) ? ButtonClass.Property.active : ButtonClass.Main.active}`}\n    button`}\n    type=\"button\"\n    disabled={isDisabled}\n    onClick={(evt) => {\n      evt.preventDefault();\n      if (authStatus !== AuthorizationStatus.Auth) {\n        dispatch(redirectToRoute(AppRoute.Login));\n      } else {\n        dispatch(postFavoriteAction(+(!btnIsFavorite), `${id}`));\n        setIsDisabled(true);\n      }\n    }}\n    >\n      <svg\n        className={(pageType === PageType.Property) ? ButtonClass.Property.icon : ButtonClass.Main.icon}\n        width={(pageType === PageType.Property) ? '31' : '18'}\n        height={(pageType === PageType.Property) ? '33' : '19'}\n        data-testid={TestID.ButtonSvg}\n      >\n        <use xlinkHref=\"#icon-bookmark\"></use>\n      </svg>\n      <span className=\"visually-hidden\">{btnIsFavorite ? 'In bookmarks' : 'To bookmarks'}</span>\n    </button>\n  );\n}\n\nexport default BookmarkButton;\n","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { toast } from 'react-toastify';\nimport { AppRoute, AuthorizationStatus, EmptyComment, Status } from '../const';\nimport { adaptAuthInfoToClient, adaptOfferToCient, adaptReviewToCient } from '../services/adapter';\nimport { ApiRoute, HttpCode, ToastMessage } from '../services/const';\nimport { createToast } from '../services/toast';\nimport { removeToken, setToken } from '../services/token';\nimport { ThunkActionResult } from '../types/action';\nimport { ServerOfferType } from '../types/offer';\nimport { CommentType, ServerAurhInfo, ServerReviewType, User } from '../types/review';\nimport { toggleIsLoading, loadOffers, requireAuthorization, addUserEmail, requireLogout, redirectToRoute, loadCurrentOffer, loadNearbyOffers, loadReviews, historyBack, toggleIsPosting, addComment, addComentRating, changeIsFavorite, loadFavoriteOffers, toggleIsFavorite } from './action';\n\nexport const loadOffersAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    dispatch(toggleIsLoading(true));\n    try {\n      const { data } = await api.get<ServerOfferType[]>(ApiRoute.Offers);\n      const offers = data.map(adaptOfferToCient);\n      dispatch(loadOffers(offers));\n    } catch {\n      toast.warning(ToastMessage.LoadFiail);\n    }\n    dispatch(toggleIsLoading(false));\n  };\n\nexport const checkAuthStatusAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    await api.get<ServerAurhInfo>(ApiRoute.Login)\n      .then((response) => {\n        const author = adaptAuthInfoToClient(response.data);\n        setToken(author.token);\n        dispatch(requireAuthorization(AuthorizationStatus.Auth));\n        dispatch(addUserEmail(author.email));\n      })\n      .catch((err: AxiosError) => createToast(err.response?.status));\n  };\n\nexport const loginAction = (user: User): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    dispatch(toggleIsLoading(true));\n    await api.post<ServerAurhInfo>(ApiRoute.Login, user)\n      .then((response) => {\n        const author = adaptAuthInfoToClient(response.data);\n        setToken(author.token);\n        dispatch(requireAuthorization(AuthorizationStatus.Auth));\n        dispatch(addUserEmail(author.email));\n        dispatch(historyBack());\n      })\n      .catch((err: AxiosError) => createToast(err.response?.status));\n    dispatch(toggleIsLoading(false));\n  };\n\nexport const logoutAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    await api.delete(ApiRoute.Logout)\n      .then(() => {\n        removeToken();\n        dispatch(requireLogout());\n        dispatch(addUserEmail(''));\n      })\n      .catch((err: AxiosError) => createToast(err.response?.status));\n  };\n\nexport const loadPropertyOffersAction = (id: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    dispatch(toggleIsLoading(true));\n    await axios.all<AxiosResponse>([\n      api.get<ServerOfferType>(`${ApiRoute.Offers}/${id}`),\n      api.get<ServerOfferType[]>(`${ApiRoute.Offers}/${id}${ApiRoute.NearbyOffers}`),\n      api.get<ServerReviewType[]>(`${ApiRoute.Reviews}/${id}`)])\n      .then(axios.spread((current, nearby, reviews) => {\n        const offer = adaptOfferToCient(current.data);\n        const offers = nearby.data.map(adaptOfferToCient);\n        const comments = reviews.data.map(adaptReviewToCient);\n        dispatch(loadNearbyOffers(offers));\n        dispatch(loadCurrentOffer(offer));\n        dispatch(loadReviews(comments));\n        dispatch(toggleIsFavorite(offer.isFavorite, offer.id));\n      }))\n      .catch((err: AxiosError) => {\n        createToast(err.response?.status);\n        if (err.response?.status === HttpCode.NotFound) {\n          dispatch(redirectToRoute(AppRoute.NotFound));\n        }\n      });\n    dispatch(toggleIsLoading(false));\n  };\n\nexport const postCommentAction = (comment: CommentType, id: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    dispatch(toggleIsPosting(true));\n    await api.post<ServerReviewType[]>(`${ApiRoute.Reviews}/${id}`, comment)\n      .then((response) => {\n        const comments = response.data.map(adaptReviewToCient);\n        dispatch(addComment(EmptyComment.comment));\n        dispatch(addComentRating(EmptyComment.rating));\n        dispatch(loadReviews(comments));\n      })\n      .catch((err: AxiosError) => createToast(err.response?.status));\n    dispatch(toggleIsPosting(false));\n  };\n\nexport const postFavoriteAction = (status: Status, id: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    dispatch(toggleIsPosting(true));\n    await api.post<ServerOfferType>(`${ApiRoute.Favorite}/${id}/${status}`)\n      .then((response) => {\n        const offer = adaptOfferToCient(response.data);\n        dispatch(changeIsFavorite(offer));\n        dispatch(toggleIsFavorite(offer.isFavorite, offer.id));\n      })\n      .catch((err: AxiosError) => createToast(err.response?.status));\n    dispatch(toggleIsPosting(false));\n  };\n\nexport const loadFavoriteOffersAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    dispatch(toggleIsLoading(true));\n    try {\n      const { data } = await api.get<ServerOfferType[]>(ApiRoute.Favorite);\n      const offers = data.map(adaptOfferToCient);\n      dispatch(loadFavoriteOffers(offers));\n    } catch {\n      toast.warning(ToastMessage.LoadFiail);\n    }\n    dispatch(toggleIsLoading(false));\n  };\n","import { generatePath, Link } from 'react-router-dom';\nimport { OfferType } from '../../types/offer';\nimport { AppRoute, PageType } from '../../const';\nimport PremiumMark from '../premium-mark/premium-mark';\nimport { getWithCapitalLetter } from '../../utils';\nimport { useDispatch } from 'react-redux';\nimport { setCurrentId } from '../../store/action';\nimport BookmarkButton from '../bookmark-button/bookmark-button';\nimport { memo } from 'react';\nimport { OfferCardClass } from '../../class-const';\n\ntype OfferCardPropType = {\n  offer: OfferType;\n  pageType: PageType;\n}\n\nconst getClassNameByType = (pageType: PageType): string => {\n  switch (pageType) {\n    case PageType.Main:\n      return OfferCardClass.Main;\n    case PageType.Favorites:\n      return OfferCardClass.Favorites;\n    case PageType.Property:\n      return OfferCardClass.Property;\n    default:\n      return '';\n  }\n};\n\nfunction OfferCard({ offer, pageType }: OfferCardPropType): JSX.Element {\n  const { id, price, rating, title, type, isPremium, isFavorite, previewImage } = offer;\n  const ratingPercent = Math.round(rating) * 20;\n  const linkPath = generatePath(AppRoute.RoomProprety, { id });\n  const dispatch = useDispatch();\n  return (\n    <article\n      onMouseEnter={() => dispatch(setCurrentId(id))}\n      onMouseLeave={() => dispatch(setCurrentId(null))}\n      onClick={() => dispatch(setCurrentId(null))}\n      className={getClassNameByType(pageType)} style={{ marginTop: `${(pageType === PageType.Favorites) && '10px'}` }}\n    >\n      {isPremium && <PremiumMark pageType={PageType.Main} />}\n      <div className={`${pageType}__image-wrapper place-card__image-wrapper`}>\n        <Link to={linkPath}>\n          <img className=\"place-card__image\"\n            src={previewImage}\n            width={(pageType === PageType.Favorites) ? '150' : '260'}\n            height={(pageType === PageType.Favorites) ? '110' : '200'}\n            alt=\"Place\"\n          />\n        </Link>\n      </div>\n      <div className={`place-card__info ${(pageType === PageType.Favorites) && 'favorites__card-info'}`}>\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{price}</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <BookmarkButton id={id} isFavorite={isFavorite} />\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{ width: `${ratingPercent}%` }}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to={linkPath}>{title}</Link>\n        </h2>\n        <p className=\"place-card__type\">{getWithCapitalLetter(type)}</p>\n      </div>\n    </article>);\n}\nexport {OfferCard};\nexport default memo(OfferCard);\n","import { OfferListClass } from '../../class-const';\nimport { PageType, TestID } from '../../const';\nimport { OfferType } from '../../types/offer';\nimport OfferCard from '../offer-card/offer-card';\n\ntype OfferListProrsType = {\n  offers: OfferType[];\n  pageType: PageType;\n}\n\nconst getClassNameByType = (pageType: PageType): string => {\n  switch (pageType) {\n    case PageType.Main:\n      return OfferListClass.Main;\n    case PageType.Favorites:\n      return OfferListClass.Favorites;\n    case PageType.Property:\n      return OfferListClass.Property;\n    default:\n      return '';\n  }\n};\n\nfunction OfferList({ offers, pageType }: OfferListProrsType): JSX.Element {\n\n  return (\n    <div\n      data-testid={TestID.OfferListDiv}\n      className={getClassNameByType(pageType)}\n    >\n      {offers.map((offer) => (\n        <OfferCard\n          key={`${offer.id}${pageType}`}\n          offer={offer}\n          pageType={pageType}\n        />))}\n    </div>\n  );\n}\n\nexport default OfferList;\n","import { AppRoute, PageType, SortType } from '../../const';\nimport OfferList from '../offer-list/offer-list';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFavoriteOffers } from '../../store/app-data/selectors';\nimport { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { changeCity, changeSorting } from '../../store/action';\n\ntype FavoritesItemsProps = {\n  city: string;\n}\n\nfunction FavoritesItems({ city }: FavoritesItemsProps): JSX.Element | null {\n  const favoriteOffers = useSelector(getFavoriteOffers);\n  const filterOffersByCity = useMemo(\n    () => favoriteOffers.filter((offer) => offer.city.name === city),\n    [favoriteOffers, city]);\n\n  const dispatch = useDispatch();\n\n  const handleOnCityClick = (): void => {\n    dispatch(changeCity(city));\n    dispatch(changeSorting(SortType.Popular));\n  };\n\n  if (filterOffersByCity.length === 0) {\n    return null;\n  }\n\n  return (\n    <li className=\"favorites__locations-items\">\n      <div className=\"favorites__locations locations locations--current\">\n        <div className=\"locations__item\">\n          <Link to={AppRoute.Root}\n            onClick={handleOnCityClick}\n            className=\"locations__item-link\"\n            href=\"#todo\"\n          >\n            <span>{city}</span>\n          </Link>\n        </div>\n      </div>\n      <OfferList offers={filterOffersByCity} pageType={PageType.Favorites} />\n    </li>\n  );\n}\n\nexport default FavoritesItems;\n","import { Cities } from '../../const';\nimport FavoritesItems from '../favorites-items/favorites-items';\n\nfunction FavoritesList(): JSX.Element {\n  return (\n    <section className=\"favorites\">\n      <h1 className=\"favorites__title\">Saved listing</h1>\n      <ul className=\"favorites__list\">\n        {[...Cities.keys()].map((item) => <FavoritesItems key={item} city = {item}/>)}\n      </ul>\n    </section>\n  );\n}\n\nexport default FavoritesList;\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\n\nfunction HeaderLogo () : JSX.Element {\n  return (\n\n    <div className=\"header__left\">\n      <Link className=\"header__logo-link\" to={AppRoute.Root}>\n        <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\"/>\n      </Link>\n    </div>\n  );\n}\n\nexport {HeaderLogo};\nexport default memo(HeaderLogo);\n","import { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { redirectToRoute } from '../../store/action';\nimport { logoutAction } from '../../store/api-action';\nimport { getUserEmail } from '../../store/app-data/selectors';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\n\n\nfunction HeaderNav(): JSX.Element {\n  const email = useSelector(getUserEmail);\n  const authStatus = useSelector(getAuthorizationStatus);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  return (\n    <nav className=\"header__nav\">\n      <ul className=\"header__nav-list\">\n        <li className=\"header__nav-item user\">\n          <Link className=\"header__nav-link header__nav-link--profile\"\n            href=\"#todo\"\n            to={AppRoute.Favorites}\n          >\n            <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n            </div>\n            {(authStatus === AuthorizationStatus.Auth)\n              ? <span className=\"header__user-name user__name\">{email}</span>\n              : <span className=\"header__login\">Sign in</span>}\n          </Link>\n        </li>\n        {(authStatus === AuthorizationStatus.Auth) &&\n          <li className=\"header__nav-item\">\n            <a className=\"header__nav-link\" href=\"#todo\"\n              onClick={(evt) => {\n                evt.preventDefault();\n                dispatch(logoutAction());\n                if (location.pathname === AppRoute.Favorites) {\n                  dispatch(redirectToRoute(AppRoute.Root));\n                }\n              }}\n            >\n              <span className=\"header__signout\">Sign out</span>\n            </a>\n          </li>}\n      </ul>\n    </nav>\n  );\n}\n\nexport { HeaderNav };\nexport default memo(HeaderNav);\n","\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport { removeFavoriteOffers } from '../../store/action';\nimport { loadFavoriteOffersAction } from '../../store/api-action';\nimport { getFavoriteOffers } from '../../store/app-data/selectors';\nimport { getIsLoading } from '../../store/app-process/selectors';\nimport FavoritesEmptyContainer from '../favorites-empty-container/favorites-empty-container';\nimport FavoritesList from '../favorites-list/favorites-list';\nimport HeaderLogo from '../header-logo/header-logo';\nimport HeaderNav from '../header-nav/header-nav';\nimport Preloader from '../preloader/preloader';\n\n\nfunction FavoritesPage(): JSX.Element {\n  const isLoading = useSelector(getIsLoading);\n  const favoriteOffers = useSelector(getFavoriteOffers);\n  const isNotEmpty = (favoriteOffers.length > 0);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadFavoriteOffersAction());\n    return () => {\n      dispatch(removeFavoriteOffers());\n    };\n  }, [dispatch]);\n\n\n  if (isLoading) {\n    return <Preloader />;\n  }\n\n  return (\n    <div className=\"page\">\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <HeaderLogo />\n            <HeaderNav />\n          </div>\n        </div>\n      </header>\n\n      <main className=\"page__main page__main--favorites\">\n        <div className=\"page__favorites-container container\">\n          {(isNotEmpty) ? <FavoritesList /> : < FavoritesEmptyContainer />}\n        </div>\n      </main>\n      <footer className=\"footer container\">\n        <Link to = {AppRoute.Root} className=\"footer__logo-link\" href=\"\">\n          <img className=\"footer__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"64\" height=\"33\" />\n        </Link>\n      </footer>\n    </div>\n  );\n}\n\nexport default FavoritesPage;\n","import { FormEvent, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { AppRoute, Cities, invalidEmail, invalidPassword, reEmail, rePassword, SortType, TestID } from '../../const';\nimport { changeCity, changeSorting } from '../../store/action';\nimport { loginAction } from '../../store/api-action';\nimport HeaderLogo from '../header-logo/header-logo';\n\n\nfunction LoginPage(): JSX.Element {\n  const dispatch = useDispatch();\n  const cities = [...Cities.keys()];\n  const cityName = cities[Math.floor(Math.random() * cities.length)];\n  const loginRef = useRef<HTMLInputElement | null>(null);\n  const passwordRef = useRef<HTMLInputElement | null>(null);\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>): void => {\n    evt.preventDefault();\n    if (loginRef.current !== null && passwordRef.current !== null) {\n      if (!rePassword.test(passwordRef.current.value)) {\n        toast.warning(invalidPassword);\n        return;\n      }\n      if (!reEmail.test(loginRef.current.value)) {\n        toast.warning(invalidEmail);\n        return;\n      }\n      const user = {\n        email: loginRef.current.value,\n        password: passwordRef.current.value,\n      };\n      dispatch(loginAction(user));\n    }\n  };\n\n  const handleOnCityClick = (): void => {\n    dispatch(changeCity(cityName));\n    dispatch(changeSorting(SortType.Popular));\n  };\n\n  return (\n    <div className=\"page page--gray page--login\">\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <HeaderLogo />\n          </div>\n        </div>\n      </header>\n\n      <main className=\"page__main page__main--login\">\n        <div className=\"page__login-container container\">\n          <section className=\"login\">\n            <h1 className=\"login__title\">Sign in</h1>\n            <form\n              className=\"login__form form\" action=\"#\"\n              method=\"post\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">E-mail</label>\n                <input\n                  ref={loginRef}\n                  className=\"login__input form__input\"\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  required\n                  data-testid={TestID.LoginEmail}\n                />\n              </div>\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">Password</label>\n                <input className=\"login__input form__input\"\n                  ref={passwordRef}\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  required\n                  data-testid={TestID.LoginPassword}\n                />\n              </div>\n              <button\n                className=\"login__submit form__submit button\"\n                type=\"submit\"\n                data-testid={TestID.LoginButton}\n              >\n                Sign in\n              </button>\n            </form>\n          </section>\n          <section className=\"locations locations--login locations--current\">\n            <div className=\"locations__item\">\n              <Link to={AppRoute.Root}\n                onClick={handleOnCityClick}\n                className=\"locations__item-link\" href=\"#todo\"\n                data-testid={TestID.LoginLink}\n              >\n                <span>\n                  {cityName}\n                </span>\n              </Link>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeCity, changeSorting } from '../../store/action';\nimport { SortType, Cities } from '../../const';\nimport { getCity } from '../../store/user-process/selectors';\nimport { memo } from 'react';\n\nfunction CityList(): JSX.Element {\n\n  const city = useSelector(getCity);\n\n  const dispatch = useDispatch();\n\n  const onCityChange = (cityName: string) => {\n    dispatch(changeCity(cityName));\n    dispatch(changeSorting(SortType.Popular));\n  };\n\n  return (\n    <section className=\"locations container\">\n      <ul className=\"locations__list tabs__list\">\n        {[...Cities.keys()].map((item) => (\n          <li key={item} className=\"locations__item\">\n            <a className={`locations__item-link tabs__item ${(city === item) && 'tabs__item--active'}`}\n              onClick={(evt) => {\n                evt.preventDefault();\n                onCityChange(item);\n              }}\n              href=\"#todo\"\n            >\n              <span>{item}</span>\n            </a>\n          </li>))}\n      </ul>\n    </section>\n  );\n}\n\nexport {CityList};\nexport default memo(CityList);\n","\nimport { memo, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SortType, TestID } from '../../const';\nimport { changeSorting } from '../../store/action';\nimport { getCity, getSortType } from '../../store/user-process/selectors';\n\nfunction PlacesOption(): JSX.Element {\n  const city = useSelector(getCity);\n  const sortType = useSelector(getSortType);\n  const sortTypes = Object.values(SortType);\n  const [isOpened, setIsOpened] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setIsOpened(false);\n  }, [city]);\n\n  return (\n    <form className=\"places__sorting\" action=\"#\" method=\"get\">\n      <span className=\"places__sorting-caption\">Sort by</span>\n      <span className=\"places__sorting-type\"\n        tabIndex={0}\n        onClick={() => setIsOpened((prevState) => !prevState)}\n        data-testid={TestID.Option}\n      >\n        {sortType}\n        <svg className=\"places__sorting-arrow\" width=\"7\" height=\"4\">\n          <use xlinkHref=\"#icon-arrow-select\"></use>\n        </svg>\n      </span>\n      <ul className={`places__options places__options--custom ${isOpened && 'places__options--opened'}`}>\n        {\n          sortTypes.map((item) => (\n            <li key={item}\n              className={`places__option ${(item === sortType) && 'places__option--active'}`}\n              tabIndex={0}\n              onClick={\n                () => {\n                  setIsOpened((prevState) => !prevState);\n                  dispatch(changeSorting(item));\n                }\n              }\n            >{item}\n            </li>))\n        }\n\n      </ul>\n    </form>\n  );\n}\n\nexport default memo(PlacesOption);\n","import { useSelector } from 'react-redux';\nimport OfferList from '../offer-list/offer-list';\nimport PlacesOption from '../places-option/places-options';\nimport { PageType } from '../../const';\nimport { getSortedOffers } from '../../store/app-data/selectors';\n\ntype CitiesContainerProp = {\n  city: string;\n}\n\nfunction CitiesContainer({city}: CitiesContainerProp): JSX.Element {\n  const sortedOffers = useSelector(getSortedOffers);\n\n  return (\n    <section className=\"cities__places places\">\n      <h2 className=\"visually-hidden\">Places</h2>\n      <b className=\"places__found\">{sortedOffers.length} places to stay in {city}</b>\n      <PlacesOption />\n      <OfferList offers={sortedOffers} pageType={PageType.Main} />\n    </section>\n  );\n}\n\nexport default CitiesContainer;\n","type CitiesEmptyContainerProp = {\n  city: string;\n}\n\nfunction CitiesEmptyContainer({ city }: CitiesEmptyContainerProp): JSX.Element {\n  return (\n    <section className=\"cities__no-places\">\n      <div className=\"cities__status-wrapper tabs__content\">\n        <b className=\"cities__status\">No places to stay available</b>\n        <p className=\"cities__status-description\">We could not find any property available at the moment in {city}</p>\n      </div>\n    </section>\n  );\n}\n\nexport default CitiesEmptyContainer;\n","import { MutableRefObject, useEffect, useState } from 'react';\nimport { Map, TileLayer } from 'leaflet';\nimport { CityType } from '../types/offer';\n\nconst LAYER_TITLE = 'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png';\nconst ATTRIBUTION = '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>';\n\nfunction useMap(mapRef:MutableRefObject<null>, city:CityType) : Map | null {\n  const [map, setMap] = useState<Map|null>(null);\n\n  useEffect(() => {\n    const {latitude, longitude, zoom} = city.location;\n    if (mapRef.current !== null && map === null) {\n      const instance =  new Map(mapRef.current, {\n        center: {\n          lat: latitude,\n          lng: longitude,\n        },\n        zoom: zoom,\n      });\n\n      const layer = new TileLayer(\n        LAYER_TITLE,\n        {\n          attribution: ATTRIBUTION,\n        },\n      );\n\n      instance.addLayer(layer);\n\n      setMap(instance);\n\n    }\n  }, [mapRef, map, city]);\n\n  return map;\n}\n\nexport default useMap;\n","import { useEffect, useRef } from 'react';\nimport useMap from '../../hooks/use-map';\nimport { CityType, MapStyleType, OfferType } from '../../types/offer';\nimport 'leaflet/dist/leaflet.css';\nimport { Icon, LayerGroup, Marker } from 'leaflet';\nimport { AppRoute, Cities, PageType, TestID } from '../../const';\nimport { generatePath, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getCurrentId } from '../../store/user-process/selectors';\nimport { getCurrentOffer } from '../../store/app-data/selectors';\nimport { MapClass } from '../../class-const';\n\n\ntype MapProrsType = {\n  offers: OfferType[];\n  pageType: string;\n  city: string;\n}\n\nconst CustomIcon = {\n  DEFAULT: 'img/pin.svg',\n  CURRENT: 'img/pin-active.svg',\n};\n\nconst defaultCustomIcon = new Icon({\n  iconUrl: CustomIcon.DEFAULT,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n});\n\nconst currentCustomIcon = new Icon({\n  iconUrl: CustomIcon.CURRENT,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n});\n\nconst getStyleByPageName = (pageType: string): MapStyleType | Omit<MapStyleType, 'margin'> => {\n  switch (pageType) {\n    case PageType.Main:\n      return { height: '550px', width: '512px' };\n    default:\n      return { height: '579px', width: '1144px', margin: 'auto' };\n  }\n};\n\nfunction Map({ offers, pageType, city }: MapProrsType): JSX.Element {\n  const selectedId = useSelector(getCurrentId);\n  const currentOffer = useSelector(getCurrentOffer);\n  const currentPin = currentOffer.id ?? selectedId;\n  const currentCity = Cities.get(city) as CityType;\n  const mapRef = useRef(null);\n  const map = useMap(mapRef, currentCity);\n  const history = useHistory();\n\n  useEffect(() => {\n    const markersGroup = new LayerGroup();\n    if (map) {\n      offers.forEach((offer) => {\n        const marker = new Marker({\n          lat: offer.location.latitude,\n          lng: offer.location.longitude,\n        });\n\n        const onMarkerClickHandler = (): void => {\n          const linkPath = generatePath(AppRoute.RoomProprety, { id: offer.id });\n          history.push(linkPath);\n        };\n\n        marker.addEventListener('click', onMarkerClickHandler);\n        marker\n          .setIcon(\n            offer.id === currentPin\n              ? currentCustomIcon\n              : defaultCustomIcon,\n          );\n        markersGroup.addLayer(marker);\n      });\n      markersGroup.addTo(map);\n    }\n    return () => {\n      markersGroup.remove();\n    };\n  }, [map, offers, currentPin, history]);\n\n  useEffect(() => {\n    const { latitude, longitude, zoom } = currentCity.location;\n    if (map) {\n      map.flyTo([latitude, longitude], zoom);\n    }\n  }, [currentCity, map]);\n\n  return (\n    <section className={`${(pageType===PageType.Main) ? MapClass.Main : MapClass.Property} map`}\n      style={getStyleByPageName(pageType)}\n      ref={mapRef}\n      data-testid= {TestID.MapSection}\n    >\n    </section>\n  );\n}\n\nexport default Map;\n","import { useSelector } from 'react-redux';\nimport HeaderLogo from '../header-logo/header-logo';\nimport HeaderNav from '../header-nav/header-nav';\nimport CityList from '../city-list/city-list';\nimport Preloader from '../preloader/preloader';\nimport { getIsLoading } from '../../store/app-process/selectors';\nimport CitiesContainer from '../cities-container/cities-container';\nimport { getCurrentOffers } from '../../store/app-data/selectors';\nimport { getCity } from '../../store/user-process/selectors';\nimport CitiesEmptyContainer from '../cities-empty-container/cities-empty-container';\nimport Map from '../map/map';\nimport { PageType } from '../../const';\n\nfunction MainPage(): JSX.Element {\n  const city = useSelector(getCity);\n  const currentOffers = useSelector(getCurrentOffers);\n  const isLoading = useSelector(getIsLoading);\n  const isNotEmpty = (currentOffers.length > 0);\n\n  if (isLoading) {\n    return <Preloader />;\n  }\n\n  return (\n    <div className=\"page page--gray page--main\">\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <HeaderLogo />\n            <HeaderNav />\n          </div>\n        </div>\n      </header>\n\n      <main className={`page__main page__main--index ${(!isNotEmpty) && 'page__main--index-empty'}`}>\n        <h1 className=\"visually-hidden\">Cities</h1>\n        <div className=\"tabs\">\n          <CityList />\n        </div>\n        <div className=\"cities\">\n          <div className={`cities__places-container container ${(!isNotEmpty) && 'cities__places-container--empty'}`}>\n            {(isNotEmpty) ? <CitiesContainer city={city}/> : < CitiesEmptyContainer city={city} />}\n            <div className=\"cities__right-section\">\n              {(isNotEmpty) && <Map offers={currentOffers} pageType={PageType.Main} city={city} />}\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>);\n}\n\nexport default MainPage;\n","import { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport HeaderLogo from '../header-logo/header-logo';\n\nfunction NotFoundPage(): JSX.Element {\n  return (\n    <div className=\"page page--gray\">\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <HeaderLogo />\n          </div>\n        </div>\n      </header>\n\n      <main className=\"page__main\">\n        <section style={{ textAlign: 'center' }} >\n          <h1 style={{ fontSize: '32px', fontWeight: 700, fontStyle: 'oblique' }}>\n            404. Page not found\n          </h1>\n          <Link\n            to={AppRoute.Root}\n            style={{ fontSize: '22px', fontWeight: 500, fontStyle: 'oblique', color: '#4481c3' }}\n          >\n            Вернуться на главную\n          </Link>\n        </section>\n\n      </main>\n    </div>\n\n\n  );\n}\n\nexport default NotFoundPage;\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { RouteProps } from 'react-router-dom';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\n\n\ntype PrivateRouteProps = RouteProps;\n\nfunction PrivateRouteLogin(props: PrivateRouteProps): JSX.Element {\n  const authStatus = useSelector(getAuthorizationStatus);\n  return (authStatus === AuthorizationStatus.Auth)\n    ? <Redirect to={AppRoute.Root} />\n    : <Route {...props} />;\n}\n\nexport default PrivateRouteLogin;\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { RouteProps } from 'react-router-dom';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\n\n\ntype PrivateRouteProps = RouteProps & {\n  render: () => JSX.Element;\n}\n\nfunction PrivateRoute(props: PrivateRouteProps): JSX.Element {\n  const { exact, path, render } = props;\n  const authStatus = useSelector(getAuthorizationStatus);\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={() => (\n        authStatus === AuthorizationStatus.Auth\n          ? render()\n          : <Redirect to={AppRoute.Login} />\n      )}\n    />\n  );\n}\n\nexport default PrivateRoute;\n\n","type GalleryListPropType = {\n  id: number;\n  images: string[];\n}\n\n\nfunction GalleryList ({images, id} : GalleryListPropType) : JSX.Element {\n  return (\n    <div className=\"property__gallery-container container\">\n      <div className=\"property__gallery\">\n        {images.map((image) => (\n          <div key={id++} className=\"property__image-wrapper\">\n            <img className=\"property__image\" src={image} alt=\"Studio\"/>\n          </div>))}\n      </div>\n    </div>);\n}\n\nexport default GalleryList;\n","type PropertyListPropType = {\n  goods: string[];\n  id: number;\n}\n\nfunction PropertyList ({goods, id} : PropertyListPropType) : JSX.Element {\n  return (\n    <div className=\"property__inside\">\n      <h2 className=\"property__inside-title\">What&apos;s inside</h2>\n      <ul className=\"property__inside-list\">\n        {goods.map((item) => (\n          <li key={id++} className=\"property__inside-item\">\n            {item}\n          </li>))}\n\n      </ul>\n    </div>);\n}\n\nexport default PropertyList;\n","import { ChangeEvent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addComentRating } from '../../store/action';\nimport { getCommentRating } from '../../store/app-data/selectors';\n\ntype CommentStarPropsType = {\n  element: number,\n  discription: string,\n\n}\n\nfunction CommentStar({ element, discription }: CommentStarPropsType): JSX.Element {\n  const rating = useSelector(getCommentRating);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <input\n        className=\"form__rating-input visually-hidden\"\n        name=\"rating\"\n        value={element}\n        id={`\"${element}-stars\"`}\n        type=\"radio\"\n        checked={(element === rating)}\n        onChange={(evt: ChangeEvent<HTMLInputElement>) =>\n          dispatch(addComentRating(+evt.target.value))}\n      />\n      <label\n        htmlFor={`\"${element}-stars\"`}\n        className=\"reviews__rating-label form__rating-label\"\n        title={discription}\n      >\n        <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n          <use xlinkHref=\"#icon-star\"></use>\n        </svg>\n      </label>\n    </>\n\n  );\n}\n\nexport default CommentStar;\n","import { ChangeEvent, FormEvent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postCommentAction } from '../../store/api-action';\nimport CommentStar from '../comment-star/comment-star';\nimport { COMMENT_MAX_VALUE, COMMENT_MIN_VALUE, RATING_MIN_VALUE, Star } from '../../const';\nimport { addComment } from '../../store/action';\nimport { getComment, getCommentRating, getCurrentOffer } from '../../store/app-data/selectors';\nimport { getIsLoading, getIsPosting } from '../../store/app-process/selectors';\n\nfunction CommentForm(): JSX.Element {\n  const currentOffer = useSelector(getCurrentOffer);\n  const isLoading = useSelector(getIsLoading);\n  const isPosting = useSelector(getIsPosting);\n  const comment = useSelector(getComment);\n  const rating = useSelector(getCommentRating);\n\n  const dispatch = useDispatch();\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    dispatch(postCommentAction({ comment, rating }, currentOffer.id.toString()));\n  };\n\n  const isButonDisable = !((comment.length >= COMMENT_MIN_VALUE && comment.length <= COMMENT_MAX_VALUE && rating > RATING_MIN_VALUE));\n\n  return (\n    <form className=\"reviews__form form\" action=\"#\" method=\"post\" onSubmit={handleSubmit}>\n      <fieldset disabled={isLoading || isPosting}>\n        <label className=\"reviews__label form__label\" htmlFor=\"review\">Your review</label>\n        <div className=\"reviews__rating-form form__rating\">\n          {[...Star.entries()].map(([element, discription]) => (\n            <CommentStar\n              key={element}\n              element={element}\n              discription={discription}\n            />\n          ))}\n        </div>\n        <textarea\n          onChange={(evt: ChangeEvent<HTMLTextAreaElement>) =>\n            dispatch(addComment(evt.target.value))}\n          className=\"reviews__textarea form__textarea\" id=\"review\" name=\"review\"\n          placeholder=\"Tell how was your stay, what you like and what can be improved\"\n          value={comment}\n        >\n        </textarea>\n        <div className=\"reviews__button-wrapper\">\n          <p className=\"reviews__help\">\n            To submit review please make sure to set\n            <span className=\"reviews__star\">rating</span>\n            and describe your stay with at least\n            <b className=\"reviews__text-amount\">50 characters</b>.\n          </p>\n          <button className=\"reviews__submit form__submit button\"\n            type=\"submit\"\n            disabled={isButonDisable}\n          >\n            Submit\n          </button>\n        </div>\n      </fieldset>\n    </form>\n  );\n}\nexport default CommentForm;\n","import { ReviewType } from '../../types/review';\nimport he from 'he';\nimport dayjs from 'dayjs';\n\ntype PropertyReviewType = {\n  review: ReviewType\n}\n\nfunction PropertyReview({ review }: PropertyReviewType): JSX.Element {\n  const { date, comment, rating, user } = review;\n  const currentDate = dayjs(date).format('MMMM YYYY');\n  const dateTime = dayjs(date).format('YYYY-MM-DD');\n  return (\n    <li className=\"reviews__item\">\n      <div className=\"reviews__user user\">\n        <div className=\"reviews__avatar-wrapper user__avatar-wrapper\">\n          <img className=\"reviews__avatar user__avatar\" src={user.avatarUrl} width=\"54\" height=\"54\" alt=\"Reviews avatar\" />\n        </div>\n        <span className=\"reviews__user-name\">\n          {user.name}\n        </span>\n      </div>\n      <div className=\"reviews__info\">\n        <div className=\"reviews__rating rating\">\n          <div className=\"reviews__stars rating__stars\">\n            <span style={{ width: `${rating * 20}%` }}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <p className=\"reviews__text\">\n          {he.encode(comment)}\n        </p>\n        <time className=\"reviews__time\" dateTime={dateTime}>{currentDate}</time>\n      </div>\n    </li>\n  );\n}\n\nexport default PropertyReview;\n","import { useSelector } from 'react-redux';\nimport { AuthorizationStatus } from '../../const';\nimport { getReviewsSortByDate } from '../../store/app-data/selectors';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\nimport CommentForm from '../comment-form/comment-form';\nimport PropertyReview from '../property-review/property-review';\n\nfunction ReviewsList(): JSX.Element {\n  const authStatus = useSelector(getAuthorizationStatus);\n  const sortedReviews = useSelector(getReviewsSortByDate);\n\n  return (\n    <section className=\"property__reviews reviews\">\n      <h2 className=\"reviews__title\">Reviews &middot; <span className=\"reviews__amount\">{sortedReviews.length}</span></h2>\n      {(sortedReviews.length !== 0) &&\n        <ul className=\"reviews__list\">\n          {sortedReviews.map((review) => (<PropertyReview key={review.id} review={review} />))}\n        </ul>}\n      {(authStatus === AuthorizationStatus.Auth) && <CommentForm />}\n    </section>\n  );\n}\n\nexport default ReviewsList;\n","import { useParams } from 'react-router';\nimport GalleryList from '../property-gallery/property-gallery';\nimport HeaderLogo from '../header-logo/header-logo';\nimport HeaderNav from '../header-nav/header-nav';\nimport PremiumMark from '../premium-mark/premium-mark';\nimport PropertyList from '../property-list/property-list';\nimport ReviewsList from '../property-reviews-list/property-reviews-list';\nimport Map from '../map/map';\nimport OfferList from '../offer-list/offer-list';\nimport { PageType } from '../../const';\nimport { useEffect } from 'react';\nimport { getWithCapitalLetter } from '../../utils';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadPropertyOffersAction } from '../../store/api-action';\nimport Preloader from '../preloader/preloader';\nimport { getCurrentOffer, getCurrentWithNearby, getNearbyOffers } from '../../store/app-data/selectors';\nimport BookmarkButton from '../bookmark-button/bookmark-button';\nimport { getIsLoading } from '../../store/app-process/selectors';\nimport { removeCurrentOffer } from '../../store/action';\n\ntype ParamsType = {\n  id: string;\n}\n\nfunction PropertyPage(): JSX.Element {\n  const isLoading = useSelector(getIsLoading);\n  const params: ParamsType = useParams();\n  const nearbyOffers = useSelector(getNearbyOffers);\n  const currentOffer = useSelector(getCurrentOffer);\n  const currWithNearOffers = useSelector(getCurrentWithNearby);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [params]);\n\n  useEffect(() => {\n    dispatch(loadPropertyOffersAction(params.id));\n    return () => {\n      dispatch(removeCurrentOffer());\n    };\n  }, [dispatch, params.id]);\n\n\n  const { isPremium, id, images, title, rating, type, bedrooms,\n    maxAdults, price, goods, host, description, city } = currentOffer;\n\n  const ratingPercent = Math.round(rating) * 20;\n\n  if (!currentOffer.id || isLoading) {\n    return <Preloader />;\n  }\n\n  return (\n    <div className=\"page\">\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <HeaderLogo />\n            <HeaderNav />\n          </div>\n        </div>\n      </header>\n\n      <main className=\"page__main page__main--property\">\n        <section className=\"property\">\n          <GalleryList images={images} id={id} />\n          <div className=\"property__container container\">\n            <div className=\"property__wrapper\">\n              {isPremium && <PremiumMark pageType={PageType.Property} />}\n              <div className=\"property__name-wrapper\">\n                <h1 className=\"property__name\">\n                  {title}\n                </h1>\n                <BookmarkButton id={id} pageType={PageType.Property} />\n              </div>\n              <div className=\"property__rating rating\">\n                <div className=\"property__stars rating__stars\">\n                  <span style={{ width: `${ratingPercent}%` }}></span>\n                  <span className=\"visually-hidden\">Rating</span>\n                </div>\n                <span className=\"property__rating-value rating__value\">{rating}</span>\n              </div>\n              <ul className=\"property__features\">\n                <li className=\"property__feature property__feature--entire\">\n                  {getWithCapitalLetter(type)}\n                </li>\n                <li className=\"property__feature property__feature--bedrooms\">\n                  {bedrooms} Bedrooms\n                </li>\n                <li className=\"property__feature property__feature--adults\">\n                  Max {maxAdults} adults\n                </li>\n              </ul>\n              <div className=\"property__price\">\n                <b className=\"property__price-value\">&euro;{price}</b>\n                <span className=\"property__price-text\">&nbsp;night</span>\n              </div>\n              {(goods.length !== 0) && <PropertyList goods={goods} id={id} />}\n              <div className=\"property__host\">\n                <h2 className=\"property__host-title\">Meet the host</h2>\n                <div className=\"property__host-user user\">\n                  <div className={`property__avatar-wrapper user__avatar-wrapper ${(host.isPro) && 'property__avatar-wrapper--pro'}`}>\n                    <img className=\"property__avatar user__avatar\" src={host.avatarUrl} width=\"74\" height=\"74\" alt=\"Host avatar\" />\n                  </div>\n                  <span className=\"property__user-name\">\n                    {host.name}\n                  </span>\n                  {(host.isPro) && <span className=\"property__user-status\">Pro</span>}\n                </div>\n                <div className=\"property__description\">\n                  <p className=\"property__text\">{description}</p>\n                </div>\n              </div>\n              <ReviewsList />\n            </div>\n          </div>\n          <Map offers={currWithNearOffers} pageType={PageType.Property} city={city.name} />\n        </section>\n        <div className=\"container\">\n          <section className=\"near-places places\">\n            <h2 className=\"near-places__title\">Other places in the neighbourhood</h2>\n            <OfferList offers={nearbyOffers} pageType={PageType.Property} />\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default PropertyPage;\n","import { useSelector } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport withPreloader from '../../hocs/with-preloader/with-preloader';\nimport { getIsLoading } from '../../store/app-process/selectors';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\nimport FavoritesPage from '../favorites-page/favorites-page';\nimport LoginPage from '../login-page/login-page';\nimport MainPage from '../main-page/main-page';\nimport NotFoundPage from '../not-found-page/not-found-page';\nimport Preloader from '../preloader/preloader';\nimport PrivateRouteLogin from '../private-route-login/private-route-login';\nimport PrivateRoute from '../private-route/private-route';\nimport PropertyPage from '../property-page/property-page';\n\nconst WPFavoritesPage = withPreloader(FavoritesPage);\nconst WPLoginPage = withPreloader(LoginPage);\nconst WPMainPage = withPreloader(MainPage);\nconst WPPropertyPage = withPreloader(PropertyPage);\n\nfunction App(): JSX.Element {\n  const isLoading = useSelector(getIsLoading);\n  const authStatus = useSelector(getAuthorizationStatus);\n  if (authStatus === AuthorizationStatus.Unknown&&isLoading) {\n    return <Preloader />;\n  }\n  return (\n    <Switch>\n      <Route exact path={AppRoute.Root}>\n        <WPMainPage />\n      </Route>\n      <PrivateRouteLogin exact path={AppRoute.Login}>\n        <WPLoginPage />\n      </PrivateRouteLogin>\n      <PrivateRoute\n        exact\n        path={AppRoute.Favorites}\n        render={() => <WPFavoritesPage />}\n      >\n      </PrivateRoute>\n      <Route exact path={AppRoute.RoomProprety}>\n        <WPPropertyPage />\n      </Route>\n      <Route>\n        <NotFoundPage />\n      </Route>\n    </Switch>\n  );\n}\nexport default App;\n","import { createBrowserHistory } from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import browserHistory from '../../browser-history';\nimport { Middleware } from 'redux';\nimport { ActionType } from '../../types/action';\nimport { State } from '../../types/state';\n\nexport const redirect: Middleware<unknown, State> =\n  (_store) =>\n    (next) =>\n      (action) => {\n\n        if (action.type === ActionType.RedirectToRoute) {\n          browserHistory.push(action.payload);\n        }\n        if (action.type === ActionType.HistoryBack) {\n          browserHistory.goBack();\n        }\n        return next(action);\n      };\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app/app';\nimport { createApi } from './services/api';\nimport { checkAuthStatusAction, loadOffersAction } from './store/api-action';\nimport { AuthorizationStatus } from './const';\nimport { requireAuthorization } from './store/action';\nimport { redirect } from './store/middlewares/redirect';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { rootReducer } from './store/root-reducer';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Router } from 'react-router-dom';\nimport browserHistory from './browser-history';\n\nconst api = createApi(\n  () => store.dispatch(requireAuthorization(AuthorizationStatus.NoAuth)));\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\nstore.dispatch(loadOffersAction());\nstore.dispatch(checkAuthStatusAction());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={browserHistory}>\n        <ToastContainer />\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n\n","import axios, {AxiosError, AxiosInstance, AxiosRequestConfig, AxiosResponse} from 'axios';\nimport { HttpCode } from './const';\nimport { API_URL, REQEST_TIMEOUT } from './const';\nimport { getToken } from './token';\n\nexport type UnauthorisedCbType = () => void;\n\n\nexport const createApi = (onUnauthorised:UnauthorisedCbType): AxiosInstance => {\n  const api = axios.create(\n    {\n      baseURL: API_URL,\n      timeout: REQEST_TIMEOUT,\n    });\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n      if (token) {\n        config.headers['X-Token'] = token;\n      }\n      return config;\n    });\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n    (err:AxiosError) => {\n      const {response} = err;\n      if(response?.status===HttpCode.Unauthorised) {\n        onUnauthorised();\n      }\n      return Promise.reject(err);\n    },\n  );\n\n  return api;\n};\n\n\n"],"sourceRoot":""}